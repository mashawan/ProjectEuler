package java8;

import java.util.stream.Stream;

/**
 * Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
 *
 * 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
 *
 * By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
 */
public class Problem2
{
    private static long first = -1;
    private static long next = 1;
    private static long sum =0;

    public static void main(String[] args)
    {
        final Stream<Long> fibonacciStream = Stream.generate(Problem2::nextFibonacci)
                .skip(2);

        fibonacciStream
            .allMatch(i -> {
                if (i > 4000000)
                {
                    return false;
                }
                else
                {
                    adder(i);
                    return true;
                }
            });

        System.out.println("The answer is: " + sum);
    }

    private static void adder(long value)
    {
        sum += value;
    }

    private static long nextFibonacci()
    {
        final long result = first + next;
        first = next;
        next = result;
        return result;
    }
}
